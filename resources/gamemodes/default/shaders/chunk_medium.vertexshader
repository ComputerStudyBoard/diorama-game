#version 330

layout (location = 0) in vec3 vertex_position;
layout (location = 1) in vec2 vertex_uv;
layout (location = 2) in vec4 vertex_normal;

uniform mat4 mvp_matrix;
uniform float time_float;

uniform vec4 light_direction;
uniform vec4 directional_color;
uniform vec4 ambient_color;

out vec2 final_uv;
out vec4 final_rgba;
out vec2 ambient_uv;

void main()
{
    gl_Position = mvp_matrix * vec4 (vertex_position, 1.0f);

    final_uv = vertex_uv;

    // directional light
    float strength1 = clamp (dot (vertex_normal, light_direction), 0, 1);
    float strength2 = clamp (dot (vertex_normal, -light_direction), 0, 1);

    final_rgba = directional_color * strength1;
    final_rgba = final_rgba + vec4 (0.2, 0.2, 1.0, 1.0) * strength2;

    // ambient
    final_rgba = final_rgba + ambient_color;
    final_rgba.a = 1.0;

    ambient_uv.x = time_float;
    ambient_uv.y = 0.5;
}
